{"version":3,"sources":["media/tomato.svg","media/repeat.svg","media/play-button.svg","media/pause-button.svg","media/up-arrow.svg","media/down-arrow.svg","components/App.js","index.js"],"names":["zeroPad","num","places","String","padStart","minutesToSeconds","minutes","App","props","state","isLive","display","type","seconds","settings","work","break","handleRestart","bind","setSettings","settingsManualInput","settingsArrowClick","startPause","countDown","keepTheTime","componentDidMount","event","this","setState","value","validValue","settingsType","target","id","parentElement","change","includes","newValue","setInterval","newType","newTime","console","log","className","src","logo","alt","refresh","onChange","onArrowClick","href","title","Component","ClockComponent","totalSeconds","Math","floor","secondsToTime","topButton","pauseLogo","playLogo","restartLogo","onClick","SettingsComponent","arrowClickFunction","Form","Control","size","disabled","upLogo","downLogo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eb7d950.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tomato.bb7ac504.svg\";","export default __webpack_public_path__ + \"static/media/repeat.94d34ee0.svg\";","export default __webpack_public_path__ + \"static/media/play-button.beeaf3ea.svg\";","export default __webpack_public_path__ + \"static/media/pause-button.30fe7730.svg\";","export default __webpack_public_path__ + \"static/media/up-arrow.c0423b32.svg\";","export default __webpack_public_path__ + \"static/media/down-arrow.5729c691.svg\";","// React\nimport React, { Component } from 'react';\n\n// images\nimport logo from './../media/tomato.svg';\nimport restartLogo from './../media/repeat.svg';\nimport playLogo from './../media/play-button.svg';\nimport pauseLogo from './../media/pause-button.svg';\nimport upLogo from './../media/up-arrow.svg';\nimport downLogo from './../media/down-arrow.svg';\n\n// bootstrap\nimport Form from 'react-bootstrap/Form';\n\n// css\nimport './App.css';\n\n// utils\nconst zeroPad = (num, places) => String(num).padStart(places, '0')\n\nconst secondsToTime = (totalSeconds) => {\n\n  let minutes = Math.floor(totalSeconds/60);\n  let seconds = totalSeconds - minutes*60;\n\n  return([zeroPad(minutes, 2),  zeroPad(seconds, 2)]);\n}\n\nconst minutesToSeconds = (minutes) => minutes*60\n\n// Main App Component\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isLive: false,\n      display: {\n        type: 'work',\n        seconds: minutesToSeconds(55),\n      }, \n      settings: {\n        work: 55,\n        break: 5,\n      }\n    };\n    this.handleRestart = this.handleRestart.bind(this);\n    this.setSettings = this.setSettings.bind(this);\n    this.settingsManualInput = this.settingsManualInput.bind(this);\n    this.settingsArrowClick = this.settingsArrowClick.bind(this);\n    this.startPause = this.startPause.bind(this);\n    this.countDown = this.countDown.bind(this);\n    this.keepTheTime = this.keepTheTime.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n  handleRestart(event){\n    this.setState({ \n      isLive: false,\n      display: {\n        type: 'work',\n        seconds: minutesToSeconds(55),\n      }, \n      settings: {\n        work: 55,\n        break: 5,\n      }\n    });\n  }\n  setSettings(type, value){\n    let validValue = value > 0 ? value : 0;\n    if (type == 'work') {\n      this.setState({ \n        settings: {\n          work:  validValue,\n          break: this.state.settings.break,\n        }\n      });\n    } else if (type == 'break') {\n      this.setState({ \n        settings: {\n          work: this.state.settings.work,\n          break: validValue,\n        }\n      });\n    }\n    // and ...\n    if (type == this.state.display.type) {\n      this.setState({ \n        display: {\n          type: type,\n          seconds: minutesToSeconds(validValue),\n        }\n      });\n    }\n  } \n  settingsManualInput(event){\n    let settingsType = event.target.id == 'workControl' ? 'work' : 'break';\n    this.setSettings(settingsType, event.target.value); \n  }\n  settingsArrowClick(event){\n    let settingsType = event.target.parentElement.id == 'workArrowsContainer' ? 'work' : 'break';\n    let change = event.target.id.includes('up') ? 1 : -1;\n    let newValue = (settingsType == 'work' ?  this.state.settings.work : this.state.settings.break) + change;\n    this.setSettings(settingsType, newValue); \n  }\n  startPause(event){\n    this.setState({ \n      isLive: ~this.state.isLive\n    });\n  }\n  keepTheTime(){\n\n      if (this.state.isLive) {\n        if (this.state.display.seconds == 0){\n          this.setState({ \n            isLive: false\n          });\n        } else {\n          let myInterval = setInterval(() => {\n            this.setState({ \n              display: {\n                type: this.state.display.type,\n                seconds: this.state.display.seconds - 1,\n              }\n            })\n          }, 1000)\n        }\n      }\n  \n  }\n  countDown() {\n    if (this.state.isLive) {\n      if (this.state.display.seconds == 0){\n        let newType = this.state.display.type == 'work' ? 'break' : 'work';\n        let newTime = this.state.display.type == 'work' ? this.state.settings.break : this.state.settings.work;\n\n        this.setState({ \n          display: {\n            type: newType,\n            seconds: minutesToSeconds(newTime),\n          }\n        });\n      } else {\n        this.setState({ \n          display: {\n            type: this.state.display.type,\n            seconds: this.state.display.seconds - 1,\n          }\n        })\n      }\n    }\n  }\n  keepTheTime() {\n    let interval = setInterval(this.countDown, 1000);\n  }\n  componentDidMount() {\n    this.keepTheTime();\n    console.log('keeping the time!');\n  }\n  render(){\n    return (\n      <div className=\"App\">\n  \n        <header className=\"header\">\n            <img src={logo} className=\"appLogo\" alt=\"logo\" />\n            <span>Reloj Tomatito</span>\n        </header>\n  \n        <div id=\"contentBox\">\n          <ClockComponent \n            display={this.state.display} \n            refresh={this.handleRestart}\n            isLive={this.state.isLive}\n            startPause={this.startPause}\n          />\n          <SettingsComponent \n            settings={this.state.settings} \n            onChange={this.settingsManualInput} \n            onArrowClick={this.settingsArrowClick}\n            isLive={this.state.isLive}\n          />\n        </div>  \n  \n        <footer className=\"footer\">\n          <span>  &#169; 2021, camila. Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> and <a href=\"https://icon54.com/\" title=\"Pixel perfect\">Pixel perfect</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">flaticon</a>.</span>\n        </footer>\n  \n      </div>\n    );\n  }\n}\n\n// Main clock\nconst ClockComponent = props => {\n  let minutes, seconds\n  [minutes, seconds] = secondsToTime(props.display.seconds);\n\n  let topButton = props.isLive ? pauseLogo : playLogo;\n\n  //console.log(minutes, seconds);\n  return (\n    <div id=\"mainBody\">\n      <div id=\"buttonsContainer\">\n        <div className=\"topButtonContainer\">\n          <img src={restartLogo} id=\"restartLogo\" className=\"imageButtton\" alt=\"restart button\" onClick={props.refresh}/>\n          <div className=\"topButton\"></div>\n        </div>\n        <div className=\"topButtonContainer\">\n          <img src={topButton} id=\"playpauseLogo\" className=\"imageButtton\" alt=\"play/pause button\" onClick={props.startPause}/>\n          <div className=\"topButton\"></div>\n        </div>\n      </div>\n      <div id=\"redCarcass\">\n        <div id=\"paleInside\">\n          <div className=\"display\" id=\"type\">\n            <span>{props.display.type}</span>\n          </div>\n          <div className=\"display\" id=\"minutes\">\n            <span>{minutes}</span>\n          </div>\n          <div className=\"display\" id=\"seconds\">\n            <span>{seconds}</span>\n          </div>\n        </div>\n      </div>\n      <div id=\"redBase\"></div>\n    </div>\n  );\n};\n\n// Settings\nconst SettingsComponent = props => {\n  const doNothing = () => void 0;\n  let arrowClickFunction = props.isLive ? doNothing : props.onArrowClick\n  return (\n    <div id=\"sideControl\">\n      <div id=\"labels\" className=\"sideControlCol\">\n        <span>work (min): </span>\n        <span>break (min): </span>\n      </div>\n      <div id=\"inputs\" className=\"sideControlCol\">\n        <Form.Control size=\"sm\" type=\"text\" id=\"workControl\" \n          value={props.settings.work} \n          onChange={props.onChange} \n          disabled={props.isLive}\n        />\n        <Form.Control size=\"sm\" type=\"text\" id=\"breakControl\" \n          value={props.settings.break} \n          onChange={props.onChange} \n          disabled={props.isLive}\n        />\n      </div>\n      <div id=\"buttons\" className=\"sideControlCol\">\n        <div className=\"upDownButtonsContainers\" id=\"workArrowsContainer\">\n          <img src={upLogo} \n            id=\"upWorkLogo\" className=\"arrowButtton\" alt=\"up worktime button\" \n            onClick={arrowClickFunction}\n          />\n          <img src={downLogo} \n            id=\"downWorkLogo\" className=\"arrowButtton\" alt=\"down worktime button\" \n            onClick={arrowClickFunction}\n          />\n        </div>\n        <div className=\"upDownButtonsContainers\" id=\"breakArrowsContainer\">\n          <img src={upLogo} \n            id=\"upWorkLogo\" className=\"arrowButtton\" alt=\"up worktime button\"  \n            onClick={arrowClickFunction}\n          />\n          <img src={downLogo} \n            id=\"downWorkLogo\" className=\"arrowButtton\" alt=\"down worktime button\"  \n            onClick={arrowClickFunction}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}